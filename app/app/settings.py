"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from django.contrib.messages import constants as messages

from pathlib import Path
from os import environ
import sys
 
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
STATIC_ROOT = ''

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
 
# Set SERVER_BASE = False to use local database
SERVER_BASE = False # if you want to connect server database

SESSION_COOKIE_HTTPONLY = True

if sys.argv[1] != 'runserver':
    STATIC_ROOT = BASE_DIR / 'public/static'
    MEDIA_ROOT = BASE_DIR / 'public/media'
    DEPLOY_ROOT = BASE_DIR / 'public/static'
else:
    DEPLOY_ROOT = BASE_DIR / 'static'
    
INLINECSS_CSS_LOADER = 'django_inlinecss.css_loaders.StaticfilesFinderCSSLoader'

ALLOWED_HOSTS = [] if DEBUG else ['panbarnaba.pl']

LOGIN_URL = 'login'
SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites', 
    'django.contrib.sitemaps', 
    'django_inlinecss',
    'main',
    'tools',
    'moderate',
    'puzzle',
    'difference',
    'sudoku',
    'encrypt',
    'posts', 
    'quiz',
    'maths',
    'scoring',
    'library',
    'memo',
]

if DEBUG:
    INSTALLED_APPS.append('django_extensions')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main.context.global_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

if SERVER_BASE:
    DATABASES = {
        'default': {
            'HOST': environ.get('MYDEVIL_SQL_HOST'),
            'PORT': environ.get('MYDEVIL_SQL_PORT'),
            'NAME': environ.get('MYDEVIL_SQL_BASE'),
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'USER': environ.get('MYDEVIL_SQL_USER'),
            'PASSWORD': environ.get('MYDEVIL_SQL_PASS'),
        }
    }
else:
    DATABASES = {
    'default': {
        'HOST': environ.get('MY_SQL_HOST'),
        'NAME': environ.get('MY_SQL_BASE'),
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'USER': environ.get('MY_SQL_USER'),
        'PASSWORD': environ.get('MY_SQL_PASS'),
        }
    }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'pl-pl'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/


STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
    '/var/www/static/',
]

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}
SERVER_EMAIL = 'administrator@panbarnaba.pl'
DEFAULT_FROM_EMAIL = "kontakt@panbarnaba.pl"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = environ.get('MY_EMAIL_HOST')
EMAIL_PORT = environ.get('MY_EMAIL_PORT')
EMAIL_HOST_USER = environ.get('MY_EMAIL_USER')
EMAIL_HOST_PASSWORD = environ.get('MY_EMAIL_PASS')
EMAIL_SUBJECT_PREFIX = '[panbarnaba.pl]'
ACCOUNT_EMAIL_VERIFICATION = 'none'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_USE_LOCALTIME = True

ADMINS = [('Piotr', 'pjkalista@gmail.com')]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        }
    },
}
